{"ast":null,"code":"// /* \n// \t1.该文件是用于创建一个为Input组件服务的reducer，reducer的本质就是一个函数\n// \t2.reducer函数会接到两个参数，分别为：之前的状态(preState)，动作对象(action)\n// */\n// import {ST_ONE, ST_TWO, ST_THREE, ST_FOUR} from '../constant'\n// const init = 0,\n// \t  vaccintPoint1 = 0, \n// \t  vaccintPoint2 = 0, \n// \t  vaccintPoint3 = 0, \n// \t  vaccintPoint4 = 0 \n// export default function inputReducer(preState = init, action){\n// \t//从action对象中获取：type、data\n// \tconst {type,data} = action\n// \t//根据type决定如何加工数据\n// \tswitch (type) {\n// \t\tcase ST_ONE:\n// \t\t\treturn vaccintPoint1 = preState + data\n// \t\tcase ST_TWO:\n// \t\t\treturn vaccintPoint2 = preState + data\n// \t\tcase ST_THREE: \n// \t\t\treturn vaccintPoint3 = preState + data\n// \t\tcase ST_FOUR:\n// \t\t\treturn vaccintPoint4 = preState + data\n// \t\tdefault:\n// \t\t\treturn init\n// \t}\n// }\n\n/* \r\n\t1.该文件是用于创建一个为Input组件服务的reducer，reducer的本质就是一个函数\r\n\t2.reducer函数会接到两个参数，分别为：之前的状态(preState)，动作对象(action)\r\n*/\nimport { ST_ONE, ST_TWO, ST_THREE, ST_FOUR } from '../constant';\nimport { STP_ONE, STP_TWO, STP_THREE, STP_FOUR } from '../constant';\nconst initState = 0; //初始化状态\n\nexport default function inputReducer(preState = initState, action) {\n  //从action对象中获取：type、data\n  const {\n    type,\n    data\n  } = action; // const {stockpilePoint1, stockpilePoint2, stockpilePoint3, stockpilePoint4} = data\n  //根据type决定如何加工数据\n\n  switch (type) {\n    case ST_ONE:\n      return preState + STP_ONE;\n\n    case ST_TWO:\n      return preState + STP_TWO;\n\n    case ST_THREE:\n      return preState + STP_THREE;\n\n    case ST_FOUR:\n      return preState + STP_FOUR;\n\n    default:\n      return initState;\n  }\n}","map":{"version":3,"sources":["E:/code/vaccine-system/src/redux/reducers/input.js"],"names":["ST_ONE","ST_TWO","ST_THREE","ST_FOUR","STP_ONE","STP_TWO","STP_THREE","STP_FOUR","initState","inputReducer","preState","action","type","data"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA,SAAQA,MAAR,EAAgBC,MAAhB,EAAwBC,QAAxB,EAAkCC,OAAlC,QAAgD,aAAhD;AACA,SAAQC,OAAR,EAAiBC,OAAjB,EAA0BC,SAA1B,EAAqCC,QAArC,QAAoD,aAApD;AAEA,MAAMC,SAAS,GAAG,CAAlB,C,CAAoB;;AACpB,eAAe,SAASC,YAAT,CAAsBC,QAAQ,GAACF,SAA/B,EAA0CG,MAA1C,EAAiD;AAC/D;AACA,QAAM;AAACC,IAAAA,IAAD;AAAMC,IAAAA;AAAN,MAAcF,MAApB,CAF+D,CAG/D;AACA;;AACA,UAAQC,IAAR;AACC,SAAKZ,MAAL;AACC,aAAOU,QAAQ,GAAGN,OAAlB;;AACD,SAAKH,MAAL;AACC,aAAOS,QAAQ,GAAGL,OAAlB;;AACD,SAAKH,QAAL;AACC,aAAOQ,QAAQ,GAAGJ,SAAlB;;AACD,SAAKH,OAAL;AACC,aAAOO,QAAQ,GAAGH,QAAlB;;AACD;AACC,aAAOC,SAAP;AAVF;AAYA","sourcesContent":["// /* \r\n// \t1.该文件是用于创建一个为Input组件服务的reducer，reducer的本质就是一个函数\r\n// \t2.reducer函数会接到两个参数，分别为：之前的状态(preState)，动作对象(action)\r\n// */\r\n// import {ST_ONE, ST_TWO, ST_THREE, ST_FOUR} from '../constant'\r\n\r\n// const init = 0,\r\n// \t  vaccintPoint1 = 0, \r\n// \t  vaccintPoint2 = 0, \r\n// \t  vaccintPoint3 = 0, \r\n// \t  vaccintPoint4 = 0 \r\n\r\n// export default function inputReducer(preState = init, action){\r\n// \t//从action对象中获取：type、data\r\n// \tconst {type,data} = action\r\n// \t//根据type决定如何加工数据\r\n// \tswitch (type) {\r\n// \t\tcase ST_ONE:\r\n// \t\t\treturn vaccintPoint1 = preState + data\r\n// \t\tcase ST_TWO:\r\n// \t\t\treturn vaccintPoint2 = preState + data\r\n// \t\tcase ST_THREE: \r\n// \t\t\treturn vaccintPoint3 = preState + data\r\n// \t\tcase ST_FOUR:\r\n// \t\t\treturn vaccintPoint4 = preState + data\r\n// \t\tdefault:\r\n// \t\t\treturn init\r\n// \t}\r\n// }\r\n\r\n\r\n\r\n/* \r\n\t1.该文件是用于创建一个为Input组件服务的reducer，reducer的本质就是一个函数\r\n\t2.reducer函数会接到两个参数，分别为：之前的状态(preState)，动作对象(action)\r\n*/\r\nimport {ST_ONE, ST_TWO, ST_THREE, ST_FOUR} from '../constant'\r\nimport {STP_ONE, STP_TWO, STP_THREE, STP_FOUR} from '../constant'\r\n\r\nconst initState = 0 //初始化状态\r\nexport default function inputReducer(preState=initState, action){\r\n\t//从action对象中获取：type、data\r\n\tconst {type,data} = action\r\n\t// const {stockpilePoint1, stockpilePoint2, stockpilePoint3, stockpilePoint4} = data\r\n\t//根据type决定如何加工数据\r\n\tswitch (type) {\r\n\t\tcase ST_ONE:\r\n\t\t\treturn preState + STP_ONE\r\n\t\tcase ST_TWO:\r\n\t\t\treturn preState + STP_TWO\r\n\t\tcase ST_THREE:\r\n\t\t\treturn preState + STP_THREE\r\n\t\tcase ST_FOUR:\r\n\t\t\treturn preState + STP_FOUR\r\n\t\tdefault:\r\n\t\t\treturn initState\r\n\t}\r\n}"]},"metadata":{},"sourceType":"module"}